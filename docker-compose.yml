services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: moneyger
      POSTGRES_PASSWORD: ${MONEYGER_DATABASE_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/00-init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 3s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  web:
    build:
      context: .
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      RAILS_ENV: production
      RACK_ENV: production
      BUNDLE_WITHOUT: development
      PORT: "3000"
      BINDING: 0.0.0.0
      RAILS_LOG_TO_STDOUT: "1"
      RAILS_SERVE_STATIC_FILES: "1"
      PGHOST: db
      PGUSER: moneyger
      PGPASSWORD: ${MONEYGER_DATABASE_PASSWORD}
      SOLID_QUEUE_IN_PUMA: "1"
    volumes:
      - storage:/rails/storage
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:3000/up >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

volumes:
  db_data:
  storage:


